[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Thesis blog",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nDec 28, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nDec 25, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\n  \n\n\n\n\nMy Thesis\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 18, 2023\n\n\nAbdoulie J Bah\n\n\n\n\n\n\n  \n\n\n\n\nRandom Variables\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 18, 2023\n\n\nAbdourahman Barry\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/My Thesis/My Thesis.html",
    "href": "posts/My Thesis/My Thesis.html",
    "title": "My Thesis",
    "section": "",
    "text": "“This dataset include data for predicting post-operative outcomes of haemorrhoids surgery in individuals from the country of Italy, based on their occurrence of post-operative complications and the occurrence of post-operative relapses. The data contains 17 attributes and 1732 records, the records are labeled with the class variable COMPLICANZE (COMPLICANZE Level), that allows classification of the data using the values of Si,No: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8,and V=9. the data was collected from the Italian Hospitol Data-base.”\n\n\n\n\nCode\nimport pandas as pd\nimport numpy as np\nimport sklearn as skl\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport dash\n#import dash_core_components as dcc\n#import dash_html_components as html\nfrom dash.dependencies import Input, Output, State\nimport statistics \nfrom sklearn import preprocessing\nfrom sklearn import svm\nfrom sklearn.model_selection import StratifiedKFold,cross_val_score,RandomizedSearchCV,GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.naive_bayes import GaussianNB\nfrom xgboost import XGBClassifier\nimport xgboost as xgb\nimport warnings \nwarnings.filterwarnings(\"ignore\")\n\n\n\n\n\n\n\nCode\n#df = pd.read_csv('ANALISI_EMODART_18ottobre_raw_and_data_sinthetic.csv')\ndf= pd.read_excel(\"ANALISI_EMODART_18ottobre.xlsx\")\n\n\n\n\nCode\ndf.to_csv('ANALISI_EMODART_18ottobre.csv')\n\n\n\n\nCode\ndf\n\n\n\n\n\n\n\n\n\nNUMERO PAZIENTE\nETA'\nSESSO M=0; f=1\nPROLASSO_EMORR Sì=1 NO=0\ntipo_interv\nLigasure Sì=1 NO=0\nFocus Sì=1 NO=0\nDiatermica Sì=1 NO=0\nanestesia\nSANGUINAMENTO\\npre SI/NO\nRIDUZIONEMANUALE\\npre SI/NO\nDOLORE-FASTIDIOpre SI/NO\nscoretotale_pre\nCOMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)\nCOMPLICANZE SI/NO\nRECIDIVE (no=0; se sì: I=1, II=2, III=3, IV=4)\nRECIDIVE si/no\n\n\n\n\n0\n1\n76.0\n0\n1.0\n0\n0\n0\n1\n1\n1.0\n1.0\n1.0\n14.0\n0.0\n0.0\n1.0\n0.0\n\n\n1\n2\n45.0\n0\n1.0\n0\n0\n0\n1\n0\n1.0\n0.0\n0.0\n4.0\n0.0\n0.0\n1.0\n0.0\n\n\n2\n3\n56.0\n1\n1.0\n0\n0\n0\n1\n0\n0.0\n1.0\n1.0\n13.0\n0.0\n0.0\n1.0\n0.0\n\n\n3\n4\n59.0\n0\n1.0\n0\n0\n0\n1\n0\n1.0\n0.0\n1.0\n12.0\n0.0\n0.0\n1.0\n0.0\n\n\n4\n5\n66.0\n0\n1.0\n0\n0\n0\n1\n0\n0.0\n0.0\n1.0\n6.0\n1.0\n1.0\n1.0\n0.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1726\n1727\n24.0\n1\n1.0\n1\n0\n0\n0\n1\nNaN\nNaN\nNaN\nNaN\n0.0\n0.0\n1.0\n0.0\n\n\n1727\n1728\n52.0\n0\n1.0\n1\n0\n0\n0\n1\n0.0\n1.0\n1.0\n2.0\nNaN\nNaN\nNaN\nNaN\n\n\n1728\n1729\n43.0\n1\n1.0\n1\n0\n0\n0\n1\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1729\n1730\n58.0\n0\n1.0\n1\n0\n0\n0\n1\nNaN\nNaN\nNaN\nNaN\n4.0\n1.0\nNaN\nNaN\n\n\n1730\n1731\n46.0\n0\n1.0\n1\n0\n0\n0\n1\n1.0\n1.0\n1.0\nNaN\n0.0\n0.0\nNaN\nNaN\n\n\n\n\n1731 rows × 17 columns\n\n\n\nThe dataset contains 17 variables: - NUMERO PAZIENTE - ETA’ - SESSO(M=0; f=1) - PROLASSO_EMORR(SI/NO) - tipo_interv - Ligasure(SI/NO) - Focus(SI/NO) - Diatermica(SI/NO) - anestesia - SANGUINAMENTO(SI/NO) - RIDUZIONEMANUALE(SI/NO) - DOLORE-FASTIDIOpre(SI/NO) - scoretotale_pre - COMPLICANZE(no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9) - COMPLICANZE(SI/NO) - RECIDIVE(no=0; se sì: I=1, II=2, III=3, IV=4) - RECIDIVE(si/no)\n2 target: - Post Operative Complications, renamed COMPLICANZE - post Operative relapses, renamed RECIDIVE\nAnother revelant information is that all of these variables are Non-categorical data sets.\n\n\nBased on all the data, the objective of this project is to classify individuals according to their Complication level and relapses level. This variables will be named: COMPLICANZE and RECIDIVE. This variable will take differents values among:\nCOMPLICANZE\n\nno=0\n\nse sì: - I=1 - II=2 - III=3 - IIIa=4 - IIIb=5 - IV=6 - IVa=7 - IVb=8 - V=9\nRECIDIVE\n\nno=0\n\nse sì: - I=1 - II=2 - III=3 - IV=4\n\n\n\n\nWe will perform data cleansing in two parts. In the first part we will process the data so that they are the most usable for graphic analysis. And in the second part we then transform the variables so that it is usable for the algorithm\n\n\nFirst, let’s replace all the row with missing value\n\n\nCode\ndf.isnull().any()\n\n\nNUMERO PAZIENTE                                                                         False\nETA'                                                                                     True\nSESSO M=0; f=1                                                                          False\nPROLASSO_EMORR Sì=1 NO=0                                                                 True\ntipo_interv                                                                             False\nLigasure Sì=1 NO=0                                                                      False\nFocus  Sì=1 NO=0                                                                        False\nDiatermica Sì=1 NO=0                                                                    False\nanestesia                                                                               False\nSANGUINAMENTO\\npre SI/NO                                                                 True\nRIDUZIONEMANUALE\\npre SI/NO                                                              True\nDOLORE-FASTIDIOpre SI/NO                                                                 True\nscoretotale_pre                                                                          True\nCOMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)     True\nCOMPLICANZE SI/NO                                                                        True\nRECIDIVE (no=0; se sì: I=1, II=2, III=3,  IV=4)                                          True\nRECIDIVE si/no                                                                           True\ndtype: bool\n\n\n\n\nCode\ndf[\"ETA'\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"PROLASSO_EMORR Sì=1 NO=0\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"SANGUINAMENTO\\npre SI/NO\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"RIDUZIONEMANUALE\\npre SI/NO\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"DOLORE-FASTIDIOpre SI/NO\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"scoretotale_pre\"].fillna(method='ffill', inplace=True)\n\n\n\n\nCode\ndf[\"COMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)\"].fillna(method='ffill', inplace=True)\n\n\n\n\nCode\ndf[\"COMPLICANZE SI/NO\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"RECIDIVE (no=0; se sì: I=1, II=2, III=3,  IV=4)\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"RECIDIVE si/no\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf.isnull().any()\n\n\nNUMERO PAZIENTE                                                                         False\nETA'                                                                                    False\nSESSO M=0; f=1                                                                          False\nPROLASSO_EMORR Sì=1 NO=0                                                                False\ntipo_interv                                                                             False\nLigasure Sì=1 NO=0                                                                      False\nFocus  Sì=1 NO=0                                                                        False\nDiatermica Sì=1 NO=0                                                                    False\nanestesia                                                                               False\nSANGUINAMENTO\\npre SI/NO                                                                False\nRIDUZIONEMANUALE\\npre SI/NO                                                             False\nDOLORE-FASTIDIOpre SI/NO                                                                False\nscoretotale_pre                                                                         False\nCOMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)    False\nCOMPLICANZE SI/NO                                                                       False\nRECIDIVE (no=0; se sì: I=1, II=2, III=3,  IV=4)                                         False\nRECIDIVE si/no                                                                          False\ndtype: bool\n\n\n\n\nCode\ndf.rename(columns={\"COMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)\": 'COMPLICANZE',\"RECIDIVE (no=0; se sì: I=1, II=2, III=3,  IV=4)\":\"RECIDIVE\"}, inplace=True)\n\n\n\n\n\nFor non-categorical variables, we need to check if there is any outliers.\n\n\nCode\nsns.boxplot(x=df[\"ETA'\"])\n\n\n&lt;AxesSubplot:xlabel=\"ETA'\"&gt;\n\n\n\n\n\nOnly few point are outside the box for the Age, we will exclude the extrem values. We set the terminales by using the quantiles values.\n\n\nCode\ndf_categorized = df.copy()\n\n\n\n\nCode\nq1, q2 = df_categorized[\"ETA'\"].quantile(q=0.25), df_categorized[\"ETA'\"].quantile(q=0.75)\n\nIQR = q2-q1\n\n#Age selection\ndf_categorized = df_categorized[df_categorized[\"ETA'\"] &gt;  q1 - 1.5*IQR]\ndf_categorized = df_categorized[df_categorized[\"ETA'\"] &lt;  q2 + 1.5*IQR]\n\ndf_categorized.shape\n\n\n(1727, 17)\n\n\nOnly 4 rows were deleted.\n\n\nCode\nsns.boxplot(x=df_categorized[\"ETA'\"])\n\n\n&lt;AxesSubplot:xlabel=\"ETA'\"&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf.describe().T.style.bar(subset=['mean'], color='#606ff2').background_gradient(subset=['std'], cmap='Blues').background_gradient(subset=['50%'], cmap='Blues')\n\n\n\n\n\n\n\n \ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\n\n\nNUMERO PAZIENTE\n1731.000000\n866.000000\n499.840975\n1.000000\n433.500000\n866.000000\n1298.500000\n1731.000000\n\n\nETA'\n1731.000000\n52.549393\n13.064281\n20.000000\n43.000000\n52.000000\n61.000000\n90.000000\n\n\nSESSO M=0; f=1\n1731.000000\n0.402657\n0.490575\n0.000000\n0.000000\n0.000000\n1.000000\n1.000000\n\n\nPROLASSO_EMORR Sì=1 NO=0\n1731.000000\n0.782785\n0.412470\n0.000000\n1.000000\n1.000000\n1.000000\n1.000000\n\n\ntipo_interv\n1731.000000\n0.257655\n0.437469\n0.000000\n0.000000\n0.000000\n1.000000\n1.000000\n\n\nFocus Sì=1 NO=0\n1731.000000\n0.085500\n0.279705\n0.000000\n0.000000\n0.000000\n0.000000\n1.000000\n\n\nDiatermica Sì=1 NO=0\n1731.000000\n0.485846\n0.499944\n0.000000\n0.000000\n0.000000\n1.000000\n1.000000\n\n\nanestesia\n1731.000000\n1.143847\n0.518547\n0.000000\n1.000000\n1.000000\n1.000000\n2.000000\n\n\nSANGUINAMENTO pre SI/NO\n1731.000000\n0.852686\n0.354521\n0.000000\n1.000000\n1.000000\n1.000000\n1.000000\n\n\nRIDUZIONEMANUALE pre SI/NO\n1731.000000\n0.627961\n0.483488\n0.000000\n0.000000\n1.000000\n1.000000\n1.000000\n\n\nDOLORE-FASTIDIOpre SI/NO\n1731.000000\n0.893703\n0.308306\n0.000000\n1.000000\n1.000000\n1.000000\n1.000000\n\n\nscoretotale_pre\n1731.000000\n10.537839\n4.606622\n0.000000\n6.000000\n11.000000\n14.000000\n24.000000\n\n\nCOMPLICANZE\n1731.000000\n0.290006\n0.752805\n0.000000\n0.000000\n0.000000\n0.000000\n5.000000\n\n\nCOMPLICANZE SI/NO\n1731.000000\n0.160601\n0.367268\n0.000000\n0.000000\n0.000000\n0.000000\n1.000000\n\n\nRECIDIVE\n1731.000000\n0.912767\n0.546046\n0.000000\n1.000000\n1.000000\n1.000000\n4.000000\n\n\nRECIDIVE si/no\n1731.000000\n0.082034\n0.274495\n0.000000\n0.000000\n0.000000\n0.000000\n1.000000\n\n\n\n\n\n\n\nCode\nsns.histplot(data = df_categorized, x = df_categorized[\"ETA'\"], hue = df_categorized['COMPLICANZE'], multiple = 'fill')\nsns.set(rc = {'figure.figsize':(18,15)})\n\n\n\n\n\n\n\nCode\nsns.histplot(data = df_categorized, x = df_categorized[\"ETA'\"], hue = df_categorized['RECIDIVE'], multiple = 'fill')\nsns.set(rc = {'figure.figsize':(18,15)})\n\n\n\n\n\n\n\nCode\nax = sns.histplot(data = df_categorized, x = df_categorized['COMPLICANZE'], hue = df_categorized['SESSO M=0; f=1'], multiple= 'fill')\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nsns.set(rc = {'figure.figsize':(8,8)})\n\n\n\n\n\n\n\nCode\nax = sns.histplot(data = df_categorized, x = df_categorized['RECIDIVE'], hue = df_categorized['SESSO M=0; f=1'], multiple= 'fill')\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nsns.set(rc = {'figure.figsize':(8,8)})\n\n\n\n\n\n\n\nCode\nbig_count = pd.crosstab(df_categorized['COMPLICANZE'], df_categorized['SESSO M=0; f=1'])\nbig_pct = big_count.div(big_count.sum(1), axis=0)\nbig_pct.plot.barh(stacked=True, figsize=(15, 6), alpha=0.9, grid=False, cmap='plasma')\nplt.legend(loc=\"right\", bbox_to_anchor=(1, 1.1), ncol=2)\nplt.title(\"SESSO\")\n\n\nText(0.5, 1.0, 'SESSO')"
  },
  {
    "objectID": "posts/My Thesis/My Thesis.html#packages",
    "href": "posts/My Thesis/My Thesis.html#packages",
    "title": "My Thesis",
    "section": "",
    "text": "Code\nimport pandas as pd\nimport numpy as np\nimport sklearn as skl\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport dash\n#import dash_core_components as dcc\n#import dash_html_components as html\nfrom dash.dependencies import Input, Output, State\nimport statistics \nfrom sklearn import preprocessing\nfrom sklearn import svm\nfrom sklearn.model_selection import StratifiedKFold,cross_val_score,RandomizedSearchCV,GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.naive_bayes import GaussianNB\nfrom xgboost import XGBClassifier\nimport xgboost as xgb\nimport warnings \nwarnings.filterwarnings(\"ignore\")"
  },
  {
    "objectID": "posts/My Thesis/My Thesis.html#variables",
    "href": "posts/My Thesis/My Thesis.html#variables",
    "title": "My Thesis",
    "section": "",
    "text": "Code\n#df = pd.read_csv('ANALISI_EMODART_18ottobre_raw_and_data_sinthetic.csv')\ndf= pd.read_excel(\"ANALISI_EMODART_18ottobre.xlsx\")\n\n\n\n\nCode\ndf.to_csv('ANALISI_EMODART_18ottobre.csv')\n\n\n\n\nCode\ndf\n\n\n\n\n\n\n\n\n\nNUMERO PAZIENTE\nETA'\nSESSO M=0; f=1\nPROLASSO_EMORR Sì=1 NO=0\ntipo_interv\nLigasure Sì=1 NO=0\nFocus Sì=1 NO=0\nDiatermica Sì=1 NO=0\nanestesia\nSANGUINAMENTO\\npre SI/NO\nRIDUZIONEMANUALE\\npre SI/NO\nDOLORE-FASTIDIOpre SI/NO\nscoretotale_pre\nCOMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)\nCOMPLICANZE SI/NO\nRECIDIVE (no=0; se sì: I=1, II=2, III=3, IV=4)\nRECIDIVE si/no\n\n\n\n\n0\n1\n76.0\n0\n1.0\n0\n0\n0\n1\n1\n1.0\n1.0\n1.0\n14.0\n0.0\n0.0\n1.0\n0.0\n\n\n1\n2\n45.0\n0\n1.0\n0\n0\n0\n1\n0\n1.0\n0.0\n0.0\n4.0\n0.0\n0.0\n1.0\n0.0\n\n\n2\n3\n56.0\n1\n1.0\n0\n0\n0\n1\n0\n0.0\n1.0\n1.0\n13.0\n0.0\n0.0\n1.0\n0.0\n\n\n3\n4\n59.0\n0\n1.0\n0\n0\n0\n1\n0\n1.0\n0.0\n1.0\n12.0\n0.0\n0.0\n1.0\n0.0\n\n\n4\n5\n66.0\n0\n1.0\n0\n0\n0\n1\n0\n0.0\n0.0\n1.0\n6.0\n1.0\n1.0\n1.0\n0.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n1726\n1727\n24.0\n1\n1.0\n1\n0\n0\n0\n1\nNaN\nNaN\nNaN\nNaN\n0.0\n0.0\n1.0\n0.0\n\n\n1727\n1728\n52.0\n0\n1.0\n1\n0\n0\n0\n1\n0.0\n1.0\n1.0\n2.0\nNaN\nNaN\nNaN\nNaN\n\n\n1728\n1729\n43.0\n1\n1.0\n1\n0\n0\n0\n1\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1729\n1730\n58.0\n0\n1.0\n1\n0\n0\n0\n1\nNaN\nNaN\nNaN\nNaN\n4.0\n1.0\nNaN\nNaN\n\n\n1730\n1731\n46.0\n0\n1.0\n1\n0\n0\n0\n1\n1.0\n1.0\n1.0\nNaN\n0.0\n0.0\nNaN\nNaN\n\n\n\n\n1731 rows × 17 columns\n\n\n\nThe dataset contains 17 variables: - NUMERO PAZIENTE - ETA’ - SESSO(M=0; f=1) - PROLASSO_EMORR(SI/NO) - tipo_interv - Ligasure(SI/NO) - Focus(SI/NO) - Diatermica(SI/NO) - anestesia - SANGUINAMENTO(SI/NO) - RIDUZIONEMANUALE(SI/NO) - DOLORE-FASTIDIOpre(SI/NO) - scoretotale_pre - COMPLICANZE(no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9) - COMPLICANZE(SI/NO) - RECIDIVE(no=0; se sì: I=1, II=2, III=3, IV=4) - RECIDIVE(si/no)\n2 target: - Post Operative Complications, renamed COMPLICANZE - post Operative relapses, renamed RECIDIVE\nAnother revelant information is that all of these variables are Non-categorical data sets.\n\n\nBased on all the data, the objective of this project is to classify individuals according to their Complication level and relapses level. This variables will be named: COMPLICANZE and RECIDIVE. This variable will take differents values among:\nCOMPLICANZE\n\nno=0\n\nse sì: - I=1 - II=2 - III=3 - IIIa=4 - IIIb=5 - IV=6 - IVa=7 - IVb=8 - V=9\nRECIDIVE\n\nno=0\n\nse sì: - I=1 - II=2 - III=3 - IV=4"
  },
  {
    "objectID": "posts/My Thesis/My Thesis.html#data-cleaning-part-1",
    "href": "posts/My Thesis/My Thesis.html#data-cleaning-part-1",
    "title": "My Thesis",
    "section": "",
    "text": "We will perform data cleansing in two parts. In the first part we will process the data so that they are the most usable for graphic analysis. And in the second part we then transform the variables so that it is usable for the algorithm\n\n\nFirst, let’s replace all the row with missing value\n\n\nCode\ndf.isnull().any()\n\n\nNUMERO PAZIENTE                                                                         False\nETA'                                                                                     True\nSESSO M=0; f=1                                                                          False\nPROLASSO_EMORR Sì=1 NO=0                                                                 True\ntipo_interv                                                                             False\nLigasure Sì=1 NO=0                                                                      False\nFocus  Sì=1 NO=0                                                                        False\nDiatermica Sì=1 NO=0                                                                    False\nanestesia                                                                               False\nSANGUINAMENTO\\npre SI/NO                                                                 True\nRIDUZIONEMANUALE\\npre SI/NO                                                              True\nDOLORE-FASTIDIOpre SI/NO                                                                 True\nscoretotale_pre                                                                          True\nCOMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)     True\nCOMPLICANZE SI/NO                                                                        True\nRECIDIVE (no=0; se sì: I=1, II=2, III=3,  IV=4)                                          True\nRECIDIVE si/no                                                                           True\ndtype: bool\n\n\n\n\nCode\ndf[\"ETA'\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"PROLASSO_EMORR Sì=1 NO=0\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"SANGUINAMENTO\\npre SI/NO\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"RIDUZIONEMANUALE\\npre SI/NO\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"DOLORE-FASTIDIOpre SI/NO\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"scoretotale_pre\"].fillna(method='ffill', inplace=True)\n\n\n\n\nCode\ndf[\"COMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)\"].fillna(method='ffill', inplace=True)\n\n\n\n\nCode\ndf[\"COMPLICANZE SI/NO\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"RECIDIVE (no=0; se sì: I=1, II=2, III=3,  IV=4)\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf[\"RECIDIVE si/no\"].fillna(method='ffill',inplace=True)\n\n\n\n\nCode\ndf.isnull().any()\n\n\nNUMERO PAZIENTE                                                                         False\nETA'                                                                                    False\nSESSO M=0; f=1                                                                          False\nPROLASSO_EMORR Sì=1 NO=0                                                                False\ntipo_interv                                                                             False\nLigasure Sì=1 NO=0                                                                      False\nFocus  Sì=1 NO=0                                                                        False\nDiatermica Sì=1 NO=0                                                                    False\nanestesia                                                                               False\nSANGUINAMENTO\\npre SI/NO                                                                False\nRIDUZIONEMANUALE\\npre SI/NO                                                             False\nDOLORE-FASTIDIOpre SI/NO                                                                False\nscoretotale_pre                                                                         False\nCOMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)    False\nCOMPLICANZE SI/NO                                                                       False\nRECIDIVE (no=0; se sì: I=1, II=2, III=3,  IV=4)                                         False\nRECIDIVE si/no                                                                          False\ndtype: bool\n\n\n\n\nCode\ndf.rename(columns={\"COMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)\": 'COMPLICANZE',\"RECIDIVE (no=0; se sì: I=1, II=2, III=3,  IV=4)\":\"RECIDIVE\"}, inplace=True)\n\n\n\n\n\nFor non-categorical variables, we need to check if there is any outliers.\n\n\nCode\nsns.boxplot(x=df[\"ETA'\"])\n\n\n&lt;AxesSubplot:xlabel=\"ETA'\"&gt;\n\n\n\n\n\nOnly few point are outside the box for the Age, we will exclude the extrem values. We set the terminales by using the quantiles values.\n\n\nCode\ndf_categorized = df.copy()\n\n\n\n\nCode\nq1, q2 = df_categorized[\"ETA'\"].quantile(q=0.25), df_categorized[\"ETA'\"].quantile(q=0.75)\n\nIQR = q2-q1\n\n#Age selection\ndf_categorized = df_categorized[df_categorized[\"ETA'\"] &gt;  q1 - 1.5*IQR]\ndf_categorized = df_categorized[df_categorized[\"ETA'\"] &lt;  q2 + 1.5*IQR]\n\ndf_categorized.shape\n\n\n(1727, 17)\n\n\nOnly 4 rows were deleted.\n\n\nCode\nsns.boxplot(x=df_categorized[\"ETA'\"])\n\n\n&lt;AxesSubplot:xlabel=\"ETA'\"&gt;"
  },
  {
    "objectID": "posts/My Thesis/My Thesis.html#data-analysis",
    "href": "posts/My Thesis/My Thesis.html#data-analysis",
    "title": "My Thesis",
    "section": "",
    "text": "Code\ndf.describe().T.style.bar(subset=['mean'], color='#606ff2').background_gradient(subset=['std'], cmap='Blues').background_gradient(subset=['50%'], cmap='Blues')\n\n\n\n\n\n\n\n \ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\n\n\nNUMERO PAZIENTE\n1731.000000\n866.000000\n499.840975\n1.000000\n433.500000\n866.000000\n1298.500000\n1731.000000\n\n\nETA'\n1731.000000\n52.549393\n13.064281\n20.000000\n43.000000\n52.000000\n61.000000\n90.000000\n\n\nSESSO M=0; f=1\n1731.000000\n0.402657\n0.490575\n0.000000\n0.000000\n0.000000\n1.000000\n1.000000\n\n\nPROLASSO_EMORR Sì=1 NO=0\n1731.000000\n0.782785\n0.412470\n0.000000\n1.000000\n1.000000\n1.000000\n1.000000\n\n\ntipo_interv\n1731.000000\n0.257655\n0.437469\n0.000000\n0.000000\n0.000000\n1.000000\n1.000000\n\n\nFocus Sì=1 NO=0\n1731.000000\n0.085500\n0.279705\n0.000000\n0.000000\n0.000000\n0.000000\n1.000000\n\n\nDiatermica Sì=1 NO=0\n1731.000000\n0.485846\n0.499944\n0.000000\n0.000000\n0.000000\n1.000000\n1.000000\n\n\nanestesia\n1731.000000\n1.143847\n0.518547\n0.000000\n1.000000\n1.000000\n1.000000\n2.000000\n\n\nSANGUINAMENTO pre SI/NO\n1731.000000\n0.852686\n0.354521\n0.000000\n1.000000\n1.000000\n1.000000\n1.000000\n\n\nRIDUZIONEMANUALE pre SI/NO\n1731.000000\n0.627961\n0.483488\n0.000000\n0.000000\n1.000000\n1.000000\n1.000000\n\n\nDOLORE-FASTIDIOpre SI/NO\n1731.000000\n0.893703\n0.308306\n0.000000\n1.000000\n1.000000\n1.000000\n1.000000\n\n\nscoretotale_pre\n1731.000000\n10.537839\n4.606622\n0.000000\n6.000000\n11.000000\n14.000000\n24.000000\n\n\nCOMPLICANZE\n1731.000000\n0.290006\n0.752805\n0.000000\n0.000000\n0.000000\n0.000000\n5.000000\n\n\nCOMPLICANZE SI/NO\n1731.000000\n0.160601\n0.367268\n0.000000\n0.000000\n0.000000\n0.000000\n1.000000\n\n\nRECIDIVE\n1731.000000\n0.912767\n0.546046\n0.000000\n1.000000\n1.000000\n1.000000\n4.000000\n\n\nRECIDIVE si/no\n1731.000000\n0.082034\n0.274495\n0.000000\n0.000000\n0.000000\n0.000000\n1.000000\n\n\n\n\n\n\n\nCode\nsns.histplot(data = df_categorized, x = df_categorized[\"ETA'\"], hue = df_categorized['COMPLICANZE'], multiple = 'fill')\nsns.set(rc = {'figure.figsize':(18,15)})\n\n\n\n\n\n\n\nCode\nsns.histplot(data = df_categorized, x = df_categorized[\"ETA'\"], hue = df_categorized['RECIDIVE'], multiple = 'fill')\nsns.set(rc = {'figure.figsize':(18,15)})\n\n\n\n\n\n\n\nCode\nax = sns.histplot(data = df_categorized, x = df_categorized['COMPLICANZE'], hue = df_categorized['SESSO M=0; f=1'], multiple= 'fill')\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nsns.set(rc = {'figure.figsize':(8,8)})\n\n\n\n\n\n\n\nCode\nax = sns.histplot(data = df_categorized, x = df_categorized['RECIDIVE'], hue = df_categorized['SESSO M=0; f=1'], multiple= 'fill')\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nsns.set(rc = {'figure.figsize':(8,8)})\n\n\n\n\n\n\n\nCode\nbig_count = pd.crosstab(df_categorized['COMPLICANZE'], df_categorized['SESSO M=0; f=1'])\nbig_pct = big_count.div(big_count.sum(1), axis=0)\nbig_pct.plot.barh(stacked=True, figsize=(15, 6), alpha=0.9, grid=False, cmap='plasma')\nplt.legend(loc=\"right\", bbox_to_anchor=(1, 1.1), ncol=2)\nplt.title(\"SESSO\")\n\n\nText(0.5, 1.0, 'SESSO')"
  },
  {
    "objectID": "posts/Random Variables/Random Variables.html",
    "href": "posts/Random Variables/Random Variables.html",
    "title": "Random Variables",
    "section": "",
    "text": "What is a Random Variable?\nA random variable is simply a mapping from a sample space of a random experiment to the real line. Imagine performing an experiment, say throwing a die twice, you might be interested in a numerical value such as the following :\n\nNumber of six oberved\nThe sum of the outcomes of the two rolls\neven numbers observed\n\nThis are all examples of random variables of our experiment. One thing that we can observe is that from one experiment we can have different random variable and each one is also not surprisely random because its values are derived from the sample space which is itself random.\nLets demonstrate this idea by performing a simple experiment of throwing a die 100 times and counting the number of heads observed. If we repeat this experiment a large number of times, how many number of heads would we likely to observe? Notice that here the number of heads observed for each experiment(tose of a die 100 times) is a random variable that can take values from 0 t0 100. The following code does exactly this.\n\n\nCode\nimport numpy as np\nfrom matplotlib import pylab as plt\nimport pandas as pd\n\nheads = []\n\nfor i in range(5000):\n    outcome  = np.sum(np.random.randint(0, 2, 100))\n    heads.append(outcome)\n\n_ = plt.hist(heads, 100)\n\n\n\n\n\nWe can see that repeating this experiment a number of times, we are more likely to observe 50 heads and values closed to it for each run of the experient, while values closed to 0 or 100 would be rarely observed. In fact, this is an example of Binomial Random variable. As you can see this distribution has the “famous” bell shape, which is ubiquitous in number applications. We will study the continuous analog called the Gaussian distribution.\n\n\nGaussian Random Variable\nA random variable is called Gaussian if it has the following probability density function\n\\[\\large{f_X(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma} exp\\displaystyle \\{ {-\\frac{(x - \\mu)^2}{2\\sigma^2}}} \\}\\]\nwhere \\(\\sigma\\) is the standard deviation and \\(\\mu\\) is the mean of the distribution. The Gaussian distribution has the following shape.\n\n\nCode\ndef pdf(x, u, s):\n    p1 = 1/(np.sqrt(2*np.pi)*s)\n    p2 = - ((x - u)**2)/(2*s**2)\n    return p1*np.e**p2\n\nx = np.arange(-4, 4, 0.25)\ny = pdf(x, 0, 1)\n_ = plt.plot(x, y)\n\n\n\n\n\nThe width of this curve is controlled by the value of \\(\\sigma\\) and the center point is controlled by \\(\\mu\\). We can see this in the next plots.\n\n\nCode\nparameters = [(0, 1), (7, 1 ), (15, 0.5), (15, 1.4)]\nf = plt.figure(figsize=(15,7))\nfor i in range(4):\n    u, s = parameters[i]\n    x = np.arange(u-4, u+4, 0.1)\n    y = pdf(x, u , s)\n    plt.subplot(2, 2, i+1)\n    plt.ylim([0, 0.9])\n    _ = plt.plot(x, y)\n    plt.title(f's = {s}, u={u}')\n\n\n\n\n\nAs expected the width of the curve increases with \\(\\sigma\\) and the center of the curve moves to wherever the mean is. However, the height of the curve is always inversely proportional to \\(\\sigma\\). As the value of the standard deviation increases, the height of the curve decreases and vice-versa.\n\n\nConclusion\nIn conclusion, the gaussian distribution is very common and it is used a lot in practice. In our last blog post we will look at outlier detection where the idea of Gaussian distribution will be used to create a machine learning algorithm for outlier detection, which has a number of uses in practice."
  }
]