{"title":"My Thesis","markdown":{"yaml":{"title":"My Thesis","author":"Abdoulie J Bah","date":"2023-11-18","categories":["code","analysis"],"freeze":false,"code-fold":true,"code-tools":true,"jupyter":"python3"},"headingText":"Predicting post-operative outcomes related to patients who underwent haemorrhoids surgery in an Italian hospital.","containsRefs":false,"markdown":"\n\n\n\"This dataset include data for predicting post-operative outcomes of haemorrhoids surgery in individuals from the country of Italy, based on their occurrence of post-operative complications and the occurrence of post-operative relapses. The data contains 17 attributes and 1732 records, the records are labeled with the class variable COMPLICANZE (COMPLICANZE Level), that allows classification of the data using the values of Si,No: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8,and V=9. the data was collected from the Italian Hospitol Data-base.\"\n\n## Packages\n\n```{python}\nimport pandas as pd\nimport numpy as np\nimport sklearn as skl\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport dash\n#import dash_core_components as dcc\n#import dash_html_components as html\nfrom dash.dependencies import Input, Output, State\nimport statistics \nfrom sklearn import preprocessing\nfrom sklearn import svm\nfrom sklearn.model_selection import StratifiedKFold,cross_val_score,RandomizedSearchCV,GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.naive_bayes import GaussianNB\nfrom xgboost import XGBClassifier\nimport xgboost as xgb\nimport warnings \nwarnings.filterwarnings(\"ignore\")\n```\n\n## Variables\n\n```{python}\n#df = pd.read_csv('ANALISI_EMODART_18ottobre_raw_and_data_sinthetic.csv')\ndf= pd.read_excel(\"ANALISI_EMODART_18ottobre.xlsx\")\n```\n\n```{python}\ndf.to_csv('ANALISI_EMODART_18ottobre.csv')\n```\n\n```{python}\ndf\n```\n\nThe dataset contains 17 variables: - NUMERO PAZIENTE - ETA' - SESSO(M=0; f=1) - PROLASSO_EMORR(SI/NO) - tipo_interv - Ligasure(SI/NO) - Focus(SI/NO) - Diatermica(SI/NO) - anestesia - SANGUINAMENTO\\npre(SI/NO) - RIDUZIONEMANUALE\\npre(SI/NO) - DOLORE-FASTIDIOpre(SI/NO) - scoretotale_pre - COMPLICANZE(no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9) - COMPLICANZE(SI/NO) - RECIDIVE(no=0; se sì: I=1, II=2, III=3, IV=4) - RECIDIVE(si/no)\n\n2 target: - Post Operative Complications, renamed COMPLICANZE - post Operative relapses, renamed RECIDIVE\n\nAnother revelant information is that all of these variables are Non-categorical data sets.\n\n### Problematic\n\nBased on all the data, the objective of this project is to classify individuals according to their Complication level and relapses level. This variables will be named: **COMPLICANZE** and **RECIDIVE**. This variable will take differents values among:\n\n**COMPLICANZE**\n\n-   no=0\n\n**se sì:** - I=1 - II=2 - III=3 - IIIa=4 - IIIb=5 - IV=6 - IVa=7 - IVb=8 - V=9\n\n**RECIDIVE**\n\n-   no=0\n\n**se sì:** - I=1 - II=2 - III=3 - IV=4\n\n## Data cleaning : part 1\n\nWe will perform data cleansing in two parts. In the first part we will process the data so that they are the most usable for graphic analysis. And in the second part we then transform the variables so that it is usable for the algorithm\n\n### Missing values\n\nFirst, let's replace all the row with missing value\n\n```{python}\n#| scrolled: true\ndf.isnull().any()\n```\n\n```{python}\ndf[\"ETA'\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"PROLASSO_EMORR Sì=1 NO=0\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"SANGUINAMENTO\\npre SI/NO\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"RIDUZIONEMANUALE\\npre SI/NO\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"DOLORE-FASTIDIOpre SI/NO\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"scoretotale_pre\"].fillna(method='ffill', inplace=True)\n```\n\n```{python}\ndf[\"COMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)\"].fillna(method='ffill', inplace=True)\n```\n\n```{python}\ndf[\"COMPLICANZE SI/NO\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"RECIDIVE (no=0; se sì: I=1, II=2, III=3,  IV=4)\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"RECIDIVE si/no\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf.isnull().any()\n```\n\n```{python}\ndf.rename(columns={\"COMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)\": 'COMPLICANZE',\"RECIDIVE (no=0; se sì: I=1, II=2, III=3,  IV=4)\":\"RECIDIVE\"}, inplace=True)\n```\n\n### Outliers\n\nFor non-categorical variables, we need to check if there is any outliers.\n\n```{python}\nsns.boxplot(x=df[\"ETA'\"])\n```\n\nOnly few point are outside the box for the Age, we will exclude the extrem values. We set the terminales by using the quantiles values.\n\n```{python}\ndf_categorized = df.copy()\n```\n\n```{python}\nq1, q2 = df_categorized[\"ETA'\"].quantile(q=0.25), df_categorized[\"ETA'\"].quantile(q=0.75)\n\nIQR = q2-q1\n\n#Age selection\ndf_categorized = df_categorized[df_categorized[\"ETA'\"] >  q1 - 1.5*IQR]\ndf_categorized = df_categorized[df_categorized[\"ETA'\"] <  q2 + 1.5*IQR]\n\ndf_categorized.shape\n```\n\nOnly 4 rows were deleted.\n\n```{python}\nsns.boxplot(x=df_categorized[\"ETA'\"])\n```\n\n## Data Analysis\n\n### Features\n\n```{python}\ndf.describe().T.style.bar(subset=['mean'], color='#606ff2').background_gradient(subset=['std'], cmap='Blues').background_gradient(subset=['50%'], cmap='Blues')\n```\n\n```{python}\nsns.histplot(data = df_categorized, x = df_categorized[\"ETA'\"], hue = df_categorized['COMPLICANZE'], multiple = 'fill')\nsns.set(rc = {'figure.figsize':(18,15)})\n```\n\n```{python}\nsns.histplot(data = df_categorized, x = df_categorized[\"ETA'\"], hue = df_categorized['RECIDIVE'], multiple = 'fill')\nsns.set(rc = {'figure.figsize':(18,15)})\n```\n\n```{python}\nax = sns.histplot(data = df_categorized, x = df_categorized['COMPLICANZE'], hue = df_categorized['SESSO M=0; f=1'], multiple= 'fill')\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nsns.set(rc = {'figure.figsize':(8,8)})\n```\n\n```{python}\nax = sns.histplot(data = df_categorized, x = df_categorized['RECIDIVE'], hue = df_categorized['SESSO M=0; f=1'], multiple= 'fill')\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nsns.set(rc = {'figure.figsize':(8,8)})\n```\n\n```{python}\nbig_count = pd.crosstab(df_categorized['COMPLICANZE'], df_categorized['SESSO M=0; f=1'])\nbig_pct = big_count.div(big_count.sum(1), axis=0)\nbig_pct.plot.barh(stacked=True, figsize=(15, 6), alpha=0.9, grid=False, cmap='plasma')\nplt.legend(loc=\"right\", bbox_to_anchor=(1, 1.1), ncol=2)\nplt.title(\"SESSO\")\n```\n","srcMarkdownNoYaml":"\n\n# Predicting post-operative outcomes related to patients who underwent haemorrhoids surgery in an Italian hospital.\n\n\"This dataset include data for predicting post-operative outcomes of haemorrhoids surgery in individuals from the country of Italy, based on their occurrence of post-operative complications and the occurrence of post-operative relapses. The data contains 17 attributes and 1732 records, the records are labeled with the class variable COMPLICANZE (COMPLICANZE Level), that allows classification of the data using the values of Si,No: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8,and V=9. the data was collected from the Italian Hospitol Data-base.\"\n\n## Packages\n\n```{python}\nimport pandas as pd\nimport numpy as np\nimport sklearn as skl\nfrom sklearn import preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import accuracy_score\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport dash\n#import dash_core_components as dcc\n#import dash_html_components as html\nfrom dash.dependencies import Input, Output, State\nimport statistics \nfrom sklearn import preprocessing\nfrom sklearn import svm\nfrom sklearn.model_selection import StratifiedKFold,cross_val_score,RandomizedSearchCV,GridSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import classification_report, confusion_matrix\nfrom sklearn.naive_bayes import GaussianNB\nfrom xgboost import XGBClassifier\nimport xgboost as xgb\nimport warnings \nwarnings.filterwarnings(\"ignore\")\n```\n\n## Variables\n\n```{python}\n#df = pd.read_csv('ANALISI_EMODART_18ottobre_raw_and_data_sinthetic.csv')\ndf= pd.read_excel(\"ANALISI_EMODART_18ottobre.xlsx\")\n```\n\n```{python}\ndf.to_csv('ANALISI_EMODART_18ottobre.csv')\n```\n\n```{python}\ndf\n```\n\nThe dataset contains 17 variables: - NUMERO PAZIENTE - ETA' - SESSO(M=0; f=1) - PROLASSO_EMORR(SI/NO) - tipo_interv - Ligasure(SI/NO) - Focus(SI/NO) - Diatermica(SI/NO) - anestesia - SANGUINAMENTO\\npre(SI/NO) - RIDUZIONEMANUALE\\npre(SI/NO) - DOLORE-FASTIDIOpre(SI/NO) - scoretotale_pre - COMPLICANZE(no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9) - COMPLICANZE(SI/NO) - RECIDIVE(no=0; se sì: I=1, II=2, III=3, IV=4) - RECIDIVE(si/no)\n\n2 target: - Post Operative Complications, renamed COMPLICANZE - post Operative relapses, renamed RECIDIVE\n\nAnother revelant information is that all of these variables are Non-categorical data sets.\n\n### Problematic\n\nBased on all the data, the objective of this project is to classify individuals according to their Complication level and relapses level. This variables will be named: **COMPLICANZE** and **RECIDIVE**. This variable will take differents values among:\n\n**COMPLICANZE**\n\n-   no=0\n\n**se sì:** - I=1 - II=2 - III=3 - IIIa=4 - IIIb=5 - IV=6 - IVa=7 - IVb=8 - V=9\n\n**RECIDIVE**\n\n-   no=0\n\n**se sì:** - I=1 - II=2 - III=3 - IV=4\n\n## Data cleaning : part 1\n\nWe will perform data cleansing in two parts. In the first part we will process the data so that they are the most usable for graphic analysis. And in the second part we then transform the variables so that it is usable for the algorithm\n\n### Missing values\n\nFirst, let's replace all the row with missing value\n\n```{python}\n#| scrolled: true\ndf.isnull().any()\n```\n\n```{python}\ndf[\"ETA'\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"PROLASSO_EMORR Sì=1 NO=0\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"SANGUINAMENTO\\npre SI/NO\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"RIDUZIONEMANUALE\\npre SI/NO\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"DOLORE-FASTIDIOpre SI/NO\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"scoretotale_pre\"].fillna(method='ffill', inplace=True)\n```\n\n```{python}\ndf[\"COMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)\"].fillna(method='ffill', inplace=True)\n```\n\n```{python}\ndf[\"COMPLICANZE SI/NO\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"RECIDIVE (no=0; se sì: I=1, II=2, III=3,  IV=4)\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf[\"RECIDIVE si/no\"].fillna(method='ffill',inplace=True)\n```\n\n```{python}\ndf.isnull().any()\n```\n\n```{python}\ndf.rename(columns={\"COMPLICANZE (no=0; se sì: I=1, II=2, III=3, IIIa=4, IIIb=5, IV=6, IVa=7, IVb=8, V=9)\": 'COMPLICANZE',\"RECIDIVE (no=0; se sì: I=1, II=2, III=3,  IV=4)\":\"RECIDIVE\"}, inplace=True)\n```\n\n### Outliers\n\nFor non-categorical variables, we need to check if there is any outliers.\n\n```{python}\nsns.boxplot(x=df[\"ETA'\"])\n```\n\nOnly few point are outside the box for the Age, we will exclude the extrem values. We set the terminales by using the quantiles values.\n\n```{python}\ndf_categorized = df.copy()\n```\n\n```{python}\nq1, q2 = df_categorized[\"ETA'\"].quantile(q=0.25), df_categorized[\"ETA'\"].quantile(q=0.75)\n\nIQR = q2-q1\n\n#Age selection\ndf_categorized = df_categorized[df_categorized[\"ETA'\"] >  q1 - 1.5*IQR]\ndf_categorized = df_categorized[df_categorized[\"ETA'\"] <  q2 + 1.5*IQR]\n\ndf_categorized.shape\n```\n\nOnly 4 rows were deleted.\n\n```{python}\nsns.boxplot(x=df_categorized[\"ETA'\"])\n```\n\n## Data Analysis\n\n### Features\n\n```{python}\ndf.describe().T.style.bar(subset=['mean'], color='#606ff2').background_gradient(subset=['std'], cmap='Blues').background_gradient(subset=['50%'], cmap='Blues')\n```\n\n```{python}\nsns.histplot(data = df_categorized, x = df_categorized[\"ETA'\"], hue = df_categorized['COMPLICANZE'], multiple = 'fill')\nsns.set(rc = {'figure.figsize':(18,15)})\n```\n\n```{python}\nsns.histplot(data = df_categorized, x = df_categorized[\"ETA'\"], hue = df_categorized['RECIDIVE'], multiple = 'fill')\nsns.set(rc = {'figure.figsize':(18,15)})\n```\n\n```{python}\nax = sns.histplot(data = df_categorized, x = df_categorized['COMPLICANZE'], hue = df_categorized['SESSO M=0; f=1'], multiple= 'fill')\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nsns.set(rc = {'figure.figsize':(8,8)})\n```\n\n```{python}\nax = sns.histplot(data = df_categorized, x = df_categorized['RECIDIVE'], hue = df_categorized['SESSO M=0; f=1'], multiple= 'fill')\nax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha=\"right\")\nsns.set(rc = {'figure.figsize':(8,8)})\n```\n\n```{python}\nbig_count = pd.crosstab(df_categorized['COMPLICANZE'], df_categorized['SESSO M=0; f=1'])\nbig_pct = big_count.div(big_count.sum(1), axis=0)\nbig_pct.plot.barh(stacked=True, figsize=(15, 6), alpha=0.9, grid=False, cmap='plasma')\nplt.legend(loc=\"right\", bbox_to_anchor=(1, 1.1), ncol=2)\nplt.title(\"SESSO\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"My Thesis.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"visual","theme":"cosmo","title":"My Thesis","author":"Abdoulie J Bah","date":"2023-11-18","categories":["code","analysis"],"jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}